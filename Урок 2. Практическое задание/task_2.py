"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def int_input(input_str) -> int:
    num = ''
    while num == '':
        try:
            num = input(input_str + '\n')
            num = int(num)
        except ValueError:
            print('введено не число')
    return num


def scan_number(num, counts) -> list:
    counts = [counts[0], counts[1]+1] if num % 10 % 2 else [counts[0]+1, counts[1]]
    if num // 10 == 0:
        return counts
    return scan_number(num // 10, counts)


if __name__ == '__main__':
    x = int_input('введите число')
    print(f'Количество четных и нечетных цифр в числе равно: {scan_number(x, [0, 0])}')
